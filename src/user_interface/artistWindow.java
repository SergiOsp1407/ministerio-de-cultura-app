/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user_interface;

import classes.DBConsults.artistConnection;
import classes.DBConsults.artistConsult;
import classes.artist;
import classes.verTablaArtist;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.WindowConstants;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author LENOVO
 */
public class artistWindow extends javax.swing.JFrame {
    
    String ruta = null;
    
    

    /**
     * Creates new form artistWindow
     */
    public artistWindow() {
        initComponents();
        setSize(630,400);
        setTitle("Artistas");
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        
        //Modifying the background
        ImageIcon background = new ImageIcon("src/images/background2.png");
        Icon icono = new ImageIcon(background.getImage().getScaledInstance(jLabel_background1.getWidth(),
                jLabel_background1.getHeight(), Image.SCALE_DEFAULT));
        jLabel_background1.setIcon(icono);
        this.repaint();
        
        /* DataBase_cn my_cn = new DataBase_cn();
        
        try{
            Connection cn = my_cn.getConnection();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT codigo_artista,imagenes FROM pinturas");
            
            ResultSet rs = pst.executeQuery();
            
            jTable_Artist = new JTable(model);
            jScrollPane_Artist.setViewportView(jTableArtist);
            
            model.addColumn("");
            model.addColumn("Codigo Artista");
            model.addColumn("Nombre Artista");
            model.addColumn("Pintura");
            
            while (rs.next()){
                Object[] fila = new Object[4];
                for(int i = 0; i < 4; i++){
                    fila[i] = rs.getObject(i+1);
                }
                model.addRow(fila);
            }
            
            my_cn.disconnect_cn();
        }catch(SQLException e){
            System.err.println("Error en el llenado de la tabla");
        }*/
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_TitleArtis = new javax.swing.JLabel();
        jScrollPane_Artist = new javax.swing.JScrollPane();
        jTable_Artist = new javax.swing.JTable();
        jComboBox_Filter = new javax.swing.JComboBox<>();
        jButton_savePaint = new javax.swing.JButton();
        jButton_return = new javax.swing.JButton();
        jButton_Update = new javax.swing.JButton();
        jButton_uploadPaint = new javax.swing.JButton();
        jTextField_codigo = new javax.swing.JTextField();
        jButton_seeTable = new javax.swing.JButton();
        lbl_url = new javax.swing.JLabel();
        jLabel_codPaint = new javax.swing.JLabel();
        jLabel_imagen = new javax.swing.JLabel();
        jLabel_choosePhoto = new javax.swing.JLabel();
        jLabel_background1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_TitleArtis.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 18)); // NOI18N
        jLabel_TitleArtis.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_TitleArtis.setText("Búsqueda por Artistas");
        getContentPane().add(jLabel_TitleArtis, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jTable_Artist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Artista", "Pintura"
            }
        ));
        jTable_Artist.setColumnSelectionAllowed(true);
        jTable_Artist.getTableHeader().setReorderingAllowed(false);
        jScrollPane_Artist.setViewportView(jTable_Artist);
        jTable_Artist.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable_Artist.getColumnModel().getColumnCount() > 0) {
            jTable_Artist.getColumnModel().getColumn(0).setMinWidth(0);
            jTable_Artist.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_Artist.getColumnModel().getColumn(0).setMaxWidth(10);
        }

        getContentPane().add(jScrollPane_Artist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 400, 220));

        jComboBox_Filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        jComboBox_Filter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_FilterItemStateChanged(evt);
            }
        });
        jComboBox_Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_FilterActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_Filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 230, -1));

        jButton_savePaint.setText(" Guardar Pintura");
        jButton_savePaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_savePaintActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_savePaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 230, -1));

        jButton_return.setText("Regresar");
        jButton_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_returnActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_return, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, -1, -1));

        jButton_Update.setText("Actualizar");
        jButton_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, -1));

        jButton_uploadPaint.setText("Abrir");
        jButton_uploadPaint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_uploadPaintActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_uploadPaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 70, -1));
        getContentPane().add(jTextField_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 70, -1));

        jButton_seeTable.setText("Visualizar Tabla");
        jButton_seeTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_seeTableActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_seeTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 320, -1));
        getContentPane().add(lbl_url, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320, 230, -1));

        jLabel_codPaint.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_codPaint.setText("Código Pintura:");
        getContentPane().add(jLabel_codPaint, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, -1, -1));
        getContentPane().add(jLabel_imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 150, 150));

        jLabel_choosePhoto.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_choosePhoto.setText("Elegir foto: ");
        getContentPane().add(jLabel_choosePhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, -1, 20));
        getContentPane().add(jLabel_background1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_savePaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_savePaintActionPerformed
        // TODO add your handling code here:
        
        artistConnection conn = new artistConnection();
        String codigo = jTextField_codigo.getText();
        String url = lbl_url.getText();
        
        if(url.trim().length() != 0 && codigo.trim().length() != 0){
            
            conn.guardar_imagen(ruta, codigo);
            
        }else{
            
            JOptionPane.showMessageDialog(null, "No dejar campos vacíos");
            
            
        }
    }//GEN-LAST:event_jButton_savePaintActionPerformed

    private void jButton_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_returnActionPerformed
        // TODO add your handling code here:
        new secondWindow().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton_returnActionPerformed
    
    //Filling ComboBox with info from DB
    private void jComboBox_FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_FilterActionPerformed
        // TODO add your handling code here:
        
        
        if (evt.getSource() == jComboBox_Filter){
            if(jComboBox_Filter.getSelectedIndex()>=0){                
                System.out.println("Si sirveeee el combobox");
                String comboText = (String)jComboBox_Filter.getSelectedItem();
            }
            
        }      
    }//GEN-LAST:event_jComboBox_FilterActionPerformed
    //Updating infor from DB
    private void jButton_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UpdateActionPerformed
        // TODO add your handling code here:
        if (evt.getSource() == jButton_Update ){
            System.out.println("Si sirveeee el button");
            consultArtist();
        }  
    }//GEN-LAST:event_jButton_UpdateActionPerformed
    
    //Selecting item
    private void jComboBox_FilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_FilterItemStateChanged
        // TODO add your handling code here:
        
        /*String query = jComboBox_Filter.getSelectedItem().toString();
        
        filterPaints(query);*/
    
        
    }//GEN-LAST:event_jComboBox_FilterItemStateChanged

    private void jButton_uploadPaintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_uploadPaintActionPerformed
        // TODO add your handling code here:
        
        JFileChooser j = new JFileChooser();
        
        int ap =  j.showOpenDialog(this);
        
        if(ap == JFileChooser.APPROVE_OPTION){
            ruta = j.getSelectedFile().getAbsolutePath();
            jLabel_imagen.setIcon(new ImageIcon(ruta));
            lbl_url.setText(ruta);
        }
        
    }//GEN-LAST:event_jButton_uploadPaintActionPerformed

    private void jButton_seeTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_seeTableActionPerformed
        // TODO add your handling code here:
        verTablaArtist v = new verTablaArtist();
        v.visualizar_tabla(jTable_Artist);
        //jTable_Artist.getColumnModel().getColumn(1).setPreferredWidth(50);
        TableColumnModel columnModel = jTable_Artist.getColumnModel();

        columnModel.getColumn(0).setPreferredWidth(0);
        columnModel.getColumn(1).setPreferredWidth(150);
       
        
    }//GEN-LAST:event_jButton_seeTableActionPerformed
    
    //Consult Artist Method
    private void consultArtist(){
        jComboBox_Filter.removeAllItems();        
        artistConsult my_artist = new artistConsult();
        ArrayList<artist> my_artistList = my_artist.consultArtist();
        
        for(int i = 0; i <  my_artistList.size();i++){
            jComboBox_Filter.addItem(my_artistList.get(i).getId()+" - "+my_artistList.get(i).getNombre()+" "+my_artistList.get(i).getApellido());
        }
        System.out.println("Estas en ConsultArtist");
        
    };
    
    
    
    /*Filter Paints for artist
    private void filterPaints(String query){
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        jTable_Artist.setRowSorter(tr);
        
        //Check filter query
        if (query != "Seleccione"){
            tr.setRowFilter(RowFilter.regexFilter(query));
        }else{
            jTable_Artist.setRowSorter(tr);
        }
    }*/
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(artistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(artistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(artistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(artistWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new artistWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Update;
    private javax.swing.JButton jButton_return;
    private javax.swing.JButton jButton_savePaint;
    private javax.swing.JButton jButton_seeTable;
    private javax.swing.JButton jButton_uploadPaint;
    private javax.swing.JComboBox<String> jComboBox_Filter;
    private javax.swing.JLabel jLabel_TitleArtis;
    private javax.swing.JLabel jLabel_background1;
    private javax.swing.JLabel jLabel_choosePhoto;
    private javax.swing.JLabel jLabel_codPaint;
    private javax.swing.JLabel jLabel_imagen;
    private javax.swing.JScrollPane jScrollPane_Artist;
    private javax.swing.JTable jTable_Artist;
    private javax.swing.JTextField jTextField_codigo;
    private javax.swing.JLabel lbl_url;
    // End of variables declaration//GEN-END:variables
}
